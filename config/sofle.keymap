/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 **

 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ---------------------------------------------------------------------------------------------------------------------
// |   =   |   1   |   2   |   3   |   4   |   5   |                   |   6   |   7   |   8   |   9   |   0   |   -   |
// |  TAB  |   Q   |   W   |   E   |   R   |   T   |                   |   Y   |   U   |   I   |   O   |   P   |   \   |
// |  ESC  |   A   |   S   |   D   |   F   |   G   |                   |   H   |   J   |   K   |   L   |   ;   |   '   |
// | SHIFT |   Z   |   X   |   C   |   V   |   B   | MUTE  |   | PLAY  |   N   |   M   |   ,   |   .   |   /   |  GUI  |
//                 | LOWER | LEFT  | RIGHT | BSPC  | LCTRL |   | SPACE | RAISE |  UP   | DOWN  | RAISE |
            bindings = <
&kp EQUAL &kp N1 &kp N2    &kp N3   &kp N4    &kp N5                         &kp N6    &kp N7 &kp N8    &kp N9    &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W     &kp E    &kp R     &kp T                          &kp Y     &kp U  &kp I     &kp O     &kp P    &kp BSLH
&kp ESC   &kp A  &kp S     &kp D    &kp F     &kp G                          &kp H     &kp J  &kp K     &kp L     &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X     &kp C    &kp V     &kp B    &kp C_MUTE   &kp C_PP &kp N     &kp M  &kp COMMA &kp DOT   &kp FSLH &kp RGUI
                 &mo LOWER &kp LEFT &kp RIGHT &kp BSPC &kp LCTRL    &kp RET  &kp SPACE &kp UP &kp DOWN  &mo RAISE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// ---------------------------------------------------------------------------------------------------------------------
// | BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |                   |       |       |       |       |       |       |
// |       |  INS  | PSCR  |  GUI  |       |       |                   |       |       |       |       | PGUP  |       |
// |       |  ALT  | CTRL  | SHIFT |       | CAPS  |                   |   H   |   J   |   K   |   L   | PGDN  |       |
// |       | UNDO  |  CUT  | COPY  | PASTE |       |       |   |       |       |       |       |       |       |       |
//                         |       |       |  DEL  | LALT  |   |       |       |       |       |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                   &trans &trans &trans &trans &trans    &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                         &trans &trans &trans &trans &kp PG_UP &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                       &kp H  &kp J  &kp K  &kp L  &kp PG_DN &trans
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans       &trans     &trans &trans &trans &trans &trans &trans    &trans
                        &trans       &trans       &trans       &kp DEL      &kp LALT   &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ---------------------------------------------------------------------------------------------------------------------
// |  F1   |  F2   |  F3   |  F4   |  F5   |  F6   |                   |  F7   |  F8   |  F9   |  F10  |  F11  |  F12  |
// |  `    |   1   |   2   |   3   |   4   |   5   |                   |   6   |   7   |   8   |   9   |   0   |   -   |
// |       |   !   |   @   |   #   |   $   |   %   |                   |   ^   |   &   |   *   |   (   |   )   |   =   |
// |       |   =   |   -   |   +   |   {   |   }   |       |   |       |   [   |   ]   |   ;   |   :   |   \   |       |
//                 |       |       |       |       |       |   |       |       |       |       |       |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5    &kp F6                    &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7    &kp N8          &kp N9    &kp N0    &kp MINUS
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp EQUAL
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT  &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans    &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------
// |BTCLR  |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |                   |       |       |       |       |       |       |
// |EXTPWR |       |RGB_BRI|RGB_SAI|RGB_HUI|RGB_EFF|                   |       |       |       |       |       |       |
// |       |       |RGB_BRD|RGB_SAD|RGB_HUD|       |                   |       | VOL-  | MUTE  | VOL+  |       |       |
// |       |       |       |       |       |       |RGB_TOG|   |       |       | PREV  | PLAY  | NEXT  |       |       |
//                 |       |       |       |       |       |   |       |       |       |       |       |
            bindings = <
&bt BT_CLR        &bt BT_SEL 0 &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &none &none        &none      &none        &none &none
&ext_power EP_TOG &none        &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF                         &none &none        &none      &none        &none &none
&none             &none        &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &none                                   &none &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &none &none
&none             &none        &none           &none           &none           &none           &rgb_ug RGB_TOG   &none &none &kp C_PREV   &kp C_PP   &kp C_NEXT   &none &none
                               &none           &none           &none           &none           &none             &none &none &none        &none      &none
            >;
        };
    };
};
